<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
 
 <title>Nepcoder</title>
 <link href="http://nepcoder.com/atom.xml" rel="self"/>
 <link href="http://nepcoder.com/"/>
 <updated>2010-03-12T10:46:35-06:00</updated>
 <id>http://nepcoder.com/</id>
 <author>
   <name>Himanshu Chhetri</name>
   <email>himanshuchhetri@gmail.com</email>
 </author>

 
 <entry>
   <title>Simple Cryptography using UDP and Python!</title>
   <link href="http://nepcoder.com/2010/02/21/simple_cryptography.html"/>
   <updated>2010-02-21T00:00:00-06:00</updated>
   <id>http://nepcoder.com/2010/02/21/simple_cryptography</id>
   <content type="html">&lt;h1&gt;Simple Cryptography using &lt;span class=&quot;caps&quot;&gt;UDP&lt;/span&gt; and Python!&lt;/h1&gt;
&lt;p class=&quot;meta&quot;&gt;21 February 2010&lt;/p&gt;
&lt;p&gt;This week I was working on a simple cryptography program in python. It basically has an encoder and a decoder and I integrated it with my previous &lt;span class=&quot;caps&quot;&gt;UDP&lt;/span&gt; performance measuring application. Obviously, I had to remove the code that dealt with measuring the performance of &lt;span class=&quot;caps&quot;&gt;UDP&lt;/span&gt; and instead added my encryption code in the client side and decryption code in the server side.You run the client by providing the host name as the first argument and the port the server is running on as the second argument. It then asks you for a key which has to be an alphanumeric key and also it should not contain two or more than two instances of the same letter or number. If the key is not alphanumeric or has multiple instances of a number of a letter, the program safely exits. After the user enters the key, it gives the user the option to enter the message in the command line or read a file. After the appropriate option has been chosen, the message is encrypted.&lt;br /&gt;
It uses a very simple algorithm. First, I created a variable named &amp;#8220;alphabets&amp;#8221; that stores all alphabets both capital and small using &amp;#8220;string.ascii_letters&amp;#8221;. Since, I also need to encrypt numbers i added &amp;#8220;0123456789&amp;#8221; to alphabets. I used a hash table for encrypting.I made each letter in the message a key. Every key&amp;#8217;s correspoding value&amp;#8217;s ascii was set so that it was greater than the original key&amp;#8217;s ascii value by 3.&lt;br /&gt;
 &lt;script src=&quot;http://gist.github.com/310816.js&quot;&gt;&lt;/script&gt; &lt;br /&gt;
The ord() is used to convert the letter to its corresponding ascii_value.It is incremented by 3. The chr() is used to convert it back to its corresponding character.&lt;/p&gt;
&lt;script src=&quot;http://gist.github.com/310826.js&quot;&gt;&lt;/script&gt;&lt;p&gt;If the option to encrypt a file is selected the above code is used. It opens the file in the path provided by the user. A temporary string is declared where every line of the file is added. Later another string named encrypted_string is declared and for every letter in the temporary string its key is looked up in the encrypt table and stored in the encrypted_string.&lt;/p&gt;
&lt;script src=&quot;http://gist.github.com/310830.js&quot;&gt;&lt;/script&gt;&lt;p&gt;The key is encrypted in a similar way. It is then prefixed to the encrypted message but a &amp;#8220;#&amp;#8221; seperates the encrypted_key and encrypted_message.&lt;br /&gt;
In this way decryption can first decrypt the encrypted_key and if it matches the key provided upon decryption, it can successfully decrypt the encrypted file, else it can output an error stating that the keys do not match.&lt;/p&gt;
&lt;script src=&quot;http://gist.github.com/310834.js&quot;&gt;&lt;/script&gt;&lt;p&gt;The ciphertext is then send via &lt;span class=&quot;caps&quot;&gt;UDP&lt;/span&gt; to the appropriate Host in the appropriate port.&lt;/p&gt;</content>
 </entry>
 
 <entry>
   <title>Hello world!</title>
   <link href="http://nepcoder.com/2010/02/21/hello_world.html"/>
   <updated>2010-02-21T00:00:00-06:00</updated>
   <id>http://nepcoder.com/2010/02/21/hello_world</id>
   <content type="html">&lt;h1&gt;Hello world!&lt;/h1&gt;
&lt;p class=&quot;meta&quot;&gt;12 February 2010&lt;/p&gt;
&lt;p&gt;Finally, I have set up a new blogging website :MyZenCoding. As the name suggests this blog is targeted to be a window through which one can witness the progress I make as I learn new programming languages and paradigms. Coding with a sense of Zen, a meditation practice which encourages mindfullness and awareness, is what I am aiming for.&lt;/p&gt;</content>
 </entry>
 
 
</feed>
